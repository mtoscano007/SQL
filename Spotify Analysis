# I downloaded Spotify data from Kaggle then created a table to insert Spotify data into.Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

# Top 10 aritsts based on popularity

SELECT distinct artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10

# Artist that released the longest song.
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1

OR 

SELECT artist_name
FROM BIT_DB.Spotifydata
WHERE duration_ms = (SELECT MAX(duration_ms) FROM BIT_DB.Spotifydata)

# Average danceability for the 10 most popular songs
SELECT AVG(danceability)
FROM Bit_DB.Spotifydata
WHERE popularity IN (
SELECT popularity
FROM Bit_DB.Spotifydata
ORDER BY popularity desc 
LIMIT 10)

# Top 5 most popular tracks 
SELECT track_name
FROM BIT_DB.Spotifydata
ORDER BY popularity 
LIMIT 5

# 5 Shortest songs
SELECT track_name, artist_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms asc
LIMIT 5

# 5 Shortest songs by popularity 
SELECT duration_ms, track_name
FROM BIT_DB.Spotifydata
WHERE popularity IN (
SELECT popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 5)
ORDER BY duration_ms asc

# Average what is the average danceability by artist
SELECT AVG(danceability),artist_name 
FROM BIT_DB.Spotifydata
GROUP BY artist_name

